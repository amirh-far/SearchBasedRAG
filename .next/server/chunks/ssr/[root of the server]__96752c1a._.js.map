{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/ubuntu/searchBasedRAG/lib/utils/index.ts"],"sourcesContent":["import { type Model } from '@/lib/types/models'\nimport {\n  convertToCoreMessages,\n  CoreMessage,\n  CoreToolMessage,\n  generateId,\n  JSONValue,\n  Message,\n  ToolInvocation\n} from 'ai'\nimport { type ClassValue, clsx } from 'clsx'\nimport { twMerge } from 'tailwind-merge'\nimport { ExtendedCoreMessage } from '../types'\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n\n/**\n * Takes an array of AIMessage and modifies each message where the role is 'tool'.\n * Changes the role to 'assistant' and converts the content to a JSON string.\n * Returns the modified messages as an array of CoreMessage.\n *\n * @param aiMessages - Array of AIMessage\n * @returns modifiedMessages - Array of modified messages\n */\nexport function transformToolMessages(messages: CoreMessage[]): CoreMessage[] {\n  return messages.map(message =>\n    message.role === 'tool'\n      ? {\n          ...message,\n          role: 'assistant',\n          content: JSON.stringify(message.content),\n          type: 'tool'\n        }\n      : message\n  ) as CoreMessage[]\n}\n\n/**\n * Sanitizes a URL by replacing spaces with '%20'\n * @param url - The URL to sanitize\n * @returns The sanitized URL\n */\nexport function sanitizeUrl(url: string): string {\n  return url.replace(/\\s+/g, '%20')\n}\n\nexport function createModelId(model: Model): string {\n  return `${model.providerId}:${model.id}`\n}\n\nexport function getDefaultModelId(models: Model[]): string {\n  if (!models.length) {\n    throw new Error('No models available')\n  }\n  return createModelId(models[0])\n}\n\nfunction addToolMessageToChat({\n  toolMessage,\n  messages\n}: {\n  toolMessage: CoreToolMessage\n  messages: Array<Message>\n}): Array<Message> {\n  return messages.map(message => {\n    if (message.toolInvocations) {\n      return {\n        ...message,\n        toolInvocations: message.toolInvocations.map(toolInvocation => {\n          const toolResult = toolMessage.content.find(\n            tool => tool.toolCallId === toolInvocation.toolCallId\n          )\n\n          if (toolResult) {\n            return {\n              ...toolInvocation,\n              state: 'result',\n              result: toolResult.result\n            }\n          }\n\n          return toolInvocation\n        })\n      }\n    }\n\n    return message\n  })\n}\n\nexport function convertToUIMessages(\n  messages: Array<ExtendedCoreMessage>\n): Array<Message> {\n  let pendingAnnotations: JSONValue[] = []\n  let pendingReasoning: string | undefined = undefined\n  let pendingReasoningTime: number | undefined = undefined\n\n  return messages.reduce((chatMessages: Array<Message>, message) => {\n    // Handle tool messages\n    if (message.role === 'tool') {\n      return addToolMessageToChat({\n        toolMessage: message as CoreToolMessage,\n        messages: chatMessages\n      })\n    }\n\n    // Data messages are used to capture annotations, including reasoning.\n    if (message.role === 'data') {\n      if (\n        message.content !== null &&\n        message.content !== undefined &&\n        typeof message.content !== 'string'\n      ) {\n        const content = message.content as JSONValue\n        if (\n          content &&\n          typeof content === 'object' &&\n          'type' in content &&\n          'data' in content\n        ) {\n          if (content.type === 'reasoning') {\n            // If content.data is an object, capture its reasoning and time;\n            // otherwise treat it as a simple string.\n            if (typeof content.data === 'object' && content.data !== null) {\n              pendingReasoning = (content.data as any).reasoning\n              pendingReasoningTime = (content.data as any).time\n            } else {\n              pendingReasoning = content.data as string\n              pendingReasoningTime = 0\n            }\n          } else {\n            pendingAnnotations.push(content)\n          }\n        }\n      }\n      return chatMessages\n    }\n\n    // Build the text content and tool invocations from message.content.\n    let textContent = ''\n    let toolInvocations: Array<ToolInvocation> = []\n\n    if (message.content) {\n      if (typeof message.content === 'string') {\n        textContent = message.content\n      } else if (Array.isArray(message.content)) {\n        for (const content of message.content) {\n          if (content && typeof content === 'object' && 'type' in content) {\n            if (content.type === 'text' && 'text' in content) {\n              textContent += content.text\n            } else if (\n              content.type === 'tool-call' &&\n              'toolCallId' in content &&\n              'toolName' in content &&\n              'args' in content\n            ) {\n              toolInvocations.push({\n                state: 'call',\n                toolCallId: content.toolCallId,\n                toolName: content.toolName,\n                args: content.args\n              } as ToolInvocation)\n            }\n          }\n        }\n      }\n    }\n\n    // For assistant messages, assemble annotations from any stashed data.\n    let annotations: JSONValue[] | undefined = undefined\n    if (message.role === 'assistant') {\n      if (pendingAnnotations.length > 0 || pendingReasoning !== undefined) {\n        annotations = [\n          ...pendingAnnotations,\n          ...(pendingReasoning !== undefined\n            ? [\n                {\n                  type: 'reasoning',\n                  data: {\n                    reasoning: pendingReasoning,\n                    time: pendingReasoningTime ?? 0\n                  }\n                }\n              ]\n            : [])\n        ]\n      }\n    }\n\n    // Create the new message. Note: we do not include a top-level \"reasoning\" property.\n    const newMessage: Message = {\n      id: generateId(),\n      role: message.role,\n      content: textContent,\n      toolInvocations: toolInvocations.length > 0 ? toolInvocations : undefined,\n      annotations: annotations\n    }\n\n    chatMessages.push(newMessage)\n\n    // Clear pending state after processing an assistant message.\n    if (message.role === 'assistant') {\n      pendingAnnotations = []\n      pendingReasoning = undefined\n      pendingReasoningTime = undefined\n    }\n\n    return chatMessages\n  }, [])\n}\n\nexport function convertToExtendedCoreMessages(\n  messages: Message[]\n): ExtendedCoreMessage[] {\n  const result: ExtendedCoreMessage[] = []\n\n  for (const message of messages) {\n    // Convert annotations to data messages\n    if (message.annotations && message.annotations.length > 0) {\n      message.annotations.forEach(annotation => {\n        result.push({\n          role: 'data',\n          content: annotation\n        })\n      })\n    }\n\n    // Convert reasoning to data message with unified structure (including time)\n    if (message.reasoning) {\n      const reasoningTime = (message as any).reasoningTime ?? 0\n      const reasoningData =\n        typeof message.reasoning === 'string'\n          ? { reasoning: message.reasoning, time: reasoningTime }\n          : {\n              ...(message.reasoning as Record<string, unknown>),\n              time:\n                (message as any).reasoningTime ??\n                (message.reasoning as any).time ??\n                0\n            }\n      result.push({\n        role: 'data',\n        content: {\n          type: 'reasoning',\n          data: reasoningData\n        } as JSONValue\n      })\n    }\n\n    // Convert current message\n    const converted = convertToCoreMessages([message])\n    result.push(...converted)\n  }\n\n  return result\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 198, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 204, "column": 0}, "map": {"version":3,"sources":["file:///home/ubuntu/searchBasedRAG/components/ui/button.tsx"],"sourcesContent":["import * as React from 'react'\nimport { Slot } from '@radix-ui/react-slot'\nimport { cva, type VariantProps } from 'class-variance-authority'\n\nimport { cn } from '@/lib/utils'\n\nconst buttonVariants = cva(\n  'inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50',\n  {\n    variants: {\n      variant: {\n        default: 'bg-primary text-primary-foreground hover:bg-primary/90',\n        destructive:\n          'bg-destructive text-destructive-foreground hover:bg-destructive/90',\n        outline:\n          'border border-input bg-background hover:bg-accent hover:text-accent-foreground',\n        secondary:\n          'bg-secondary text-secondary-foreground hover:bg-secondary/80',\n        ghost: 'hover:bg-accent hover:text-accent-foreground',\n        link: 'text-primary underline-offset-4 hover:underline'\n      },\n      size: {\n        default: 'h-10 px-4 py-2',\n        sm: 'h-9 rounded-md px-3',\n        lg: 'h-11 rounded-md px-8',\n        icon: 'h-10 w-10'\n      }\n    },\n    defaultVariants: {\n      variant: 'default',\n      size: 'default'\n    }\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : 'button'\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = 'Button'\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AAEA;;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACvB,0RACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;YACF,SACE;YACF,WACE;YACF,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AASF,MAAM,uBAAS,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAC5B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO,EAAE;IACxD,MAAM,OAAO,UAAU,gKAAA,CAAA,OAAI,GAAG;IAC9B,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,qHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,OAAO,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 258, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 264, "column": 0}, "map": {"version":3,"sources":["file:///home/ubuntu/searchBasedRAG/components/footer.tsx"],"sourcesContent":["import Link from 'next/link'\nimport React from 'react'\nimport { SiDiscord, SiGithub, SiX } from 'react-icons/si'\nimport { Button } from './ui/button'\n\nconst Footer: React.FC = () => {\n  return (\n    <footer className=\"w-fit p-1 md:p-2 fixed bottom-0 right-0 hidden lg:block\">\n      <div className=\"flex justify-end\">\n        <Button\n          variant={'ghost'}\n          size={'icon'}\n          className=\"text-muted-foreground/50\"\n        >\n          <Link href=\"https://discord.gg/zRxaseCuGq\" target=\"_blank\">\n            <SiDiscord size={18} />\n          </Link>\n        </Button>\n        <Button\n          variant={'ghost'}\n          size={'icon'}\n          className=\"text-muted-foreground/50\"\n        >\n          <Link href=\"https://x.com/morphic_ai\" target=\"_blank\">\n            <SiX size={18} />\n          </Link>\n        </Button>\n        <Button\n          variant={'ghost'}\n          size={'icon'}\n          className=\"text-muted-foreground/50\"\n        >\n          <Link href=\"https://git.new/morphic\" target=\"_blank\">\n            <SiGithub size={18} />\n          </Link>\n        </Button>\n      </div>\n    </footer>\n  )\n}\n\nexport default Footer\n"],"names":[],"mappings":";;;;AAAA;AAEA;AACA;;;;;AAEA,MAAM,SAAmB;IACvB,qBACE,8OAAC;QAAO,WAAU;kBAChB,cAAA,8OAAC;YAAI,WAAU;;8BACb,8OAAC,2HAAA,CAAA,SAAM;oBACL,SAAS;oBACT,MAAM;oBACN,WAAU;8BAEV,cAAA,8OAAC,4JAAA,CAAA,UAAI;wBAAC,MAAK;wBAAgC,QAAO;kCAChD,cAAA,8OAAC,8IAAA,CAAA,YAAS;4BAAC,MAAM;;;;;;;;;;;;;;;;8BAGrB,8OAAC,2HAAA,CAAA,SAAM;oBACL,SAAS;oBACT,MAAM;oBACN,WAAU;8BAEV,cAAA,8OAAC,4JAAA,CAAA,UAAI;wBAAC,MAAK;wBAA2B,QAAO;kCAC3C,cAAA,8OAAC,8IAAA,CAAA,MAAG;4BAAC,MAAM;;;;;;;;;;;;;;;;8BAGf,8OAAC,2HAAA,CAAA,SAAM;oBACL,SAAS;oBACT,MAAM;oBACN,WAAU;8BAEV,cAAA,8OAAC,4JAAA,CAAA,UAAI;wBAAC,MAAK;wBAA0B,QAAO;kCAC1C,cAAA,8OAAC,8IAAA,CAAA,WAAQ;4BAAC,MAAM;;;;;;;;;;;;;;;;;;;;;;;;;;;AAM5B;uCAEe","debugId":null}},
    {"offset": {"line": 366, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 372, "column": 0}, "map": {"version":3,"sources":["file:///home/ubuntu/searchBasedRAG/components/history.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const History = registerClientReference(\n    function() { throw new Error(\"Attempted to call History() from the server but History is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/history.tsx <module evaluation>\",\n    \"History\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,UAAU,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACzC;IAAa,MAAM,IAAI,MAAM;AAA8N,GAC3P,wDACA","debugId":null}},
    {"offset": {"line": 380, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 386, "column": 0}, "map": {"version":3,"sources":["file:///home/ubuntu/searchBasedRAG/components/history.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const History = registerClientReference(\n    function() { throw new Error(\"Attempted to call History() from the server but History is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/history.tsx\",\n    \"History\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,UAAU,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACzC;IAAa,MAAM,IAAI,MAAM;AAA8N,GAC3P,oCACA","debugId":null}},
    {"offset": {"line": 394, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 400, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 404, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 410, "column": 0}, "map": {"version":3,"sources":["file:///home/ubuntu/searchBasedRAG/components/history-item.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/components/history-item.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/history-item.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA+R,GAC5T,6DACA","debugId":null}},
    {"offset": {"line": 418, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 424, "column": 0}, "map": {"version":3,"sources":["file:///home/ubuntu/searchBasedRAG/components/history-item.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/components/history-item.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/history-item.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA2Q,GACxS,yCACA","debugId":null}},
    {"offset": {"line": 432, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 438, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 442, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 496, "column": 0}, "map": {"version":3,"sources":["file:///home/ubuntu/searchBasedRAG/lib/redis/config.ts"],"sourcesContent":["import { Redis } from '@upstash/redis'\nimport { createClient, RedisClientType } from 'redis'\n\nexport type RedisConfig = {\n  useLocalRedis: boolean\n  upstashRedisRestUrl?: string\n  upstashRedisRestToken?: string\n  localRedisUrl?: string\n}\n\nexport const redisConfig: RedisConfig = {\n  useLocalRedis: process.env.USE_LOCAL_REDIS === 'true',\n  upstashRedisRestUrl: process.env.UPSTASH_REDIS_REST_URL,\n  upstashRedisRestToken: process.env.UPSTASH_REDIS_REST_TOKEN,\n  localRedisUrl: process.env.LOCAL_REDIS_URL || 'redis://localhost:6379'\n}\n\nlet localRedisClient: RedisClientType | null = null\nlet redisWrapper: RedisWrapper | null = null\n\n// Wrapper class for Redis client\nexport class RedisWrapper {\n  private client: Redis | RedisClientType\n\n  constructor(client: Redis | RedisClientType) {\n    this.client = client\n  }\n\n  async zrange(\n    key: string,\n    start: number,\n    stop: number,\n    options?: { rev: boolean }\n  ): Promise<string[]> {\n    let result: string[]\n    if (this.client instanceof Redis) {\n      result = await this.client.zrange(key, start, stop, options)\n    } else {\n      const redisClient = this.client as RedisClientType\n      if (options?.rev) {\n        result = await redisClient.zRange(key, start, stop, { REV: true })\n      } else {\n        result = await redisClient.zRange(key, start, stop)\n      }\n    }\n    return result\n  }\n\n  async hgetall<T extends Record<string, unknown>>(\n    key: string\n  ): Promise<T | null> {\n    if (this.client instanceof Redis) {\n      return this.client.hgetall(key) as Promise<T | null>\n    } else {\n      const result = await (this.client as RedisClientType).hGetAll(key)\n      return Object.keys(result).length > 0 ? (result as T) : null\n    }\n  }\n\n  pipeline() {\n    return this.client instanceof Redis\n      ? new UpstashPipelineWrapper(this.client.pipeline())\n      : new LocalPipelineWrapper((this.client as RedisClientType).multi())\n  }\n\n  async hmset(key: string, value: Record<string, any>): Promise<'OK' | number> {\n    if (this.client instanceof Redis) {\n      return this.client.hmset(key, value)\n    } else {\n      return (this.client as RedisClientType).hSet(key, value)\n    }\n  }\n\n  async zadd(\n    key: string,\n    score: number,\n    member: string\n  ): Promise<number | null> {\n    if (this.client instanceof Redis) {\n      return this.client.zadd(key, { score, member })\n    } else {\n      return (this.client as RedisClientType).zAdd(key, {\n        score,\n        value: member\n      })\n    }\n  }\n\n  async del(key: string): Promise<number> {\n    if (this.client instanceof Redis) {\n      return this.client.del(key)\n    } else {\n      return (this.client as RedisClientType).del(key)\n    }\n  }\n\n  async zrem(key: string, member: string): Promise<number> {\n    if (this.client instanceof Redis) {\n      return this.client.zrem(key, member)\n    } else {\n      return (this.client as RedisClientType).zRem(key, member)\n    }\n  }\n\n  async close(): Promise<void> {\n    if (this.client instanceof Redis) {\n      // Upstash Redis doesn't require explicit closing\n      return\n    } else {\n      await (this.client as RedisClientType).quit()\n    }\n  }\n}\n\n// Wrapper class for Upstash Redis pipeline\nclass UpstashPipelineWrapper {\n  private pipeline: ReturnType<Redis['pipeline']>\n\n  constructor(pipeline: ReturnType<Redis['pipeline']>) {\n    this.pipeline = pipeline\n  }\n\n  hgetall(key: string) {\n    this.pipeline.hgetall(key)\n    return this\n  }\n\n  del(key: string) {\n    this.pipeline.del(key)\n    return this\n  }\n\n  zrem(key: string, member: string) {\n    this.pipeline.zrem(key, member)\n    return this\n  }\n\n  hmset(key: string, value: Record<string, any>) {\n    this.pipeline.hmset(key, value)\n    return this\n  }\n\n  zadd(key: string, score: number, member: string) {\n    this.pipeline.zadd(key, { score, member })\n    return this\n  }\n\n  async exec() {\n    try {\n      return await this.pipeline.exec()\n    } catch (error) {\n      throw error\n    }\n  }\n}\n\n// Wrapper class for local Redis pipeline\nclass LocalPipelineWrapper {\n  private pipeline: ReturnType<RedisClientType['multi']>\n\n  constructor(pipeline: ReturnType<RedisClientType['multi']>) {\n    this.pipeline = pipeline\n  }\n\n  hgetall(key: string) {\n    this.pipeline.hGetAll(key)\n    return this\n  }\n\n  del(key: string) {\n    this.pipeline.del(key)\n    return this\n  }\n\n  zrem(key: string, member: string) {\n    this.pipeline.zRem(key, member)\n    return this\n  }\n\n  hmset(key: string, value: Record<string, any>) {\n    // Convert all values to strings\n    const stringValue = Object.fromEntries(\n      Object.entries(value).map(([k, v]) => [k, String(v)])\n    )\n    this.pipeline.hSet(key, stringValue)\n    return this\n  }\n\n  zadd(key: string, score: number, member: string) {\n    this.pipeline.zAdd(key, { score, value: member })\n    return this\n  }\n\n  async exec() {\n    try {\n      return await this.pipeline.exec()\n    } catch (error) {\n      throw error\n    }\n  }\n}\n\n// Function to get a Redis client\nexport async function getRedisClient(): Promise<RedisWrapper> {\n  if (redisWrapper) {\n    return redisWrapper\n  }\n\n  if (redisConfig.useLocalRedis) {\n    if (!localRedisClient) {\n      const localRedisUrl =\n        redisConfig.localRedisUrl || 'redis://localhost:6379'\n      try {\n        localRedisClient = createClient({ url: localRedisUrl })\n        await localRedisClient.connect()\n      } catch (error) {\n        if (error instanceof Error) {\n          if (error.message.includes('ECONNREFUSED')) {\n            console.error(\n              `Failed to connect to local Redis at ${localRedisUrl}: Connection refused. Is Redis running?`\n            )\n          } else if (error.message.includes('ETIMEDOUT')) {\n            console.error(\n              `Failed to connect to local Redis at ${localRedisUrl}: Connection timed out. Check your network or Redis server.`\n            )\n          } else if (error.message.includes('ENOTFOUND')) {\n            console.error(\n              `Failed to connect to local Redis at ${localRedisUrl}: Host not found. Check your Redis URL.`\n            )\n          } else {\n            console.error(\n              `Failed to connect to local Redis at ${localRedisUrl}:`,\n              error.message\n            )\n          }\n        } else {\n          console.error(\n            `An unexpected error occurred while connecting to local Redis at ${localRedisUrl}:`,\n            error\n          )\n        }\n        throw new Error(\n          'Failed to connect to local Redis. Check your configuration and ensure Redis is running.'\n        )\n      }\n    }\n    redisWrapper = new RedisWrapper(localRedisClient)\n  } else {\n    if (\n      !redisConfig.upstashRedisRestUrl ||\n      !redisConfig.upstashRedisRestToken\n    ) {\n      throw new Error(\n        'Upstash Redis configuration is missing. Please check your environment variables.'\n      )\n    }\n    try {\n      redisWrapper = new RedisWrapper(\n        new Redis({\n          url: redisConfig.upstashRedisRestUrl,\n          token: redisConfig.upstashRedisRestToken\n        })\n      )\n    } catch (error) {\n      if (error instanceof Error) {\n        if (error.message.includes('unauthorized')) {\n          console.error(\n            'Failed to connect to Upstash Redis: Unauthorized. Check your Upstash Redis token.'\n          )\n        } else if (error.message.includes('not found')) {\n          console.error(\n            'Failed to connect to Upstash Redis: URL not found. Check your Upstash Redis URL.'\n          )\n        } else {\n          console.error('Failed to connect to Upstash Redis:', error.message)\n        }\n      } else {\n        console.error(\n          'An unexpected error occurred while connecting to Upstash Redis:',\n          error\n        )\n      }\n      throw new Error(\n        'Failed to connect to Upstash Redis. Check your configuration and credentials.'\n      )\n    }\n  }\n\n  return redisWrapper\n}\n\n// Function to close the Redis connection\nexport async function closeRedisConnection(): Promise<void> {\n  if (redisWrapper) {\n    await redisWrapper.close()\n    redisWrapper = null\n  }\n  if (localRedisClient) {\n    await localRedisClient.quit()\n    localRedisClient = null\n  }\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 735, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 741, "column": 0}, "map": {"version":3,"sources":["file:///home/ubuntu/searchBasedRAG/lib/actions/chat.ts"],"sourcesContent":["'use server'\n\nimport { revalidatePath } from 'next/cache'\nimport { redirect } from 'next/navigation'\nimport { type Chat } from '@/lib/types'\nimport { getRedisClient, RedisWrapper } from '@/lib/redis/config'\n\nasync function getRedis(): Promise<RedisWrapper> {\n  return await getRedisClient()\n}\n\nconst CHAT_VERSION = 'v2'\nfunction getUserChatKey(userId: string) {\n  return `user:${CHAT_VERSION}:chat:${userId}`\n}\n\nexport async function getChats(userId?: string | null) {\n  if (!userId) {\n    return []\n  }\n\n  try {\n    const redis = await getRedis()\n    const chats = await redis.zrange(getUserChatKey(userId), 0, -1, {\n      rev: true\n    })\n\n    if (chats.length === 0) {\n      return []\n    }\n\n    const results = await Promise.all(\n      chats.map(async chatKey => {\n        const chat = await redis.hgetall(chatKey)\n        return chat\n      })\n    )\n\n    return results\n      .filter((result): result is Record<string, any> => {\n        if (result === null || Object.keys(result).length === 0) {\n          return false\n        }\n        return true\n      })\n      .map(chat => {\n        const plainChat = { ...chat }\n        if (typeof plainChat.messages === 'string') {\n          try {\n            plainChat.messages = JSON.parse(plainChat.messages)\n          } catch (error) {\n            plainChat.messages = []\n          }\n        }\n        if (plainChat.createdAt && !(plainChat.createdAt instanceof Date)) {\n          plainChat.createdAt = new Date(plainChat.createdAt)\n        }\n        return plainChat as Chat\n      })\n  } catch (error) {\n    return []\n  }\n}\n\nexport async function getChat(id: string, userId: string = 'anonymous') {\n  const redis = await getRedis()\n  const chat = await redis.hgetall<Chat>(`chat:${id}`)\n\n  if (!chat) {\n    return null\n  }\n\n  // Parse the messages if they're stored as a string\n  if (typeof chat.messages === 'string') {\n    try {\n      chat.messages = JSON.parse(chat.messages)\n    } catch (error) {\n      chat.messages = []\n    }\n  }\n\n  // Ensure messages is always an array\n  if (!Array.isArray(chat.messages)) {\n    chat.messages = []\n  }\n\n  return chat\n}\n\nexport async function clearChats(\n  userId: string = 'anonymous'\n): Promise<{ error?: string }> {\n  const redis = await getRedis()\n  const userChatKey = getUserChatKey(userId)\n  const chats = await redis.zrange(userChatKey, 0, -1)\n  if (!chats.length) {\n    return { error: 'No chats to clear' }\n  }\n  const pipeline = redis.pipeline()\n\n  for (const chat of chats) {\n    pipeline.del(chat)\n    pipeline.zrem(userChatKey, chat)\n  }\n\n  await pipeline.exec()\n\n  revalidatePath('/')\n  redirect('/')\n}\n\nexport async function saveChat(chat: Chat, userId: string = 'anonymous') {\n  try {\n    const redis = await getRedis()\n    const pipeline = redis.pipeline()\n\n    const chatToSave = {\n      ...chat,\n      messages: JSON.stringify(chat.messages)\n    }\n\n    pipeline.hmset(`chat:${chat.id}`, chatToSave)\n    pipeline.zadd(getUserChatKey(userId), Date.now(), `chat:${chat.id}`)\n\n    const results = await pipeline.exec()\n\n    return results\n  } catch (error) {\n    throw error\n  }\n}\n\nexport async function getSharedChat(id: string) {\n  const redis = await getRedis()\n  const chat = await redis.hgetall<Chat>(`chat:${id}`)\n\n  if (!chat || !chat.sharePath) {\n    return null\n  }\n\n  return chat\n}\n\nexport async function shareChat(id: string, userId: string = 'anonymous') {\n  const redis = await getRedis()\n  const chat = await redis.hgetall<Chat>(`chat:${id}`)\n\n  if (!chat || chat.userId !== userId) {\n    return null\n  }\n\n  const payload = {\n    ...chat,\n    sharePath: `/share/${id}`\n  }\n\n  await redis.hmset(`chat:${id}`, payload)\n\n  return payload\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 899, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 905, "column": 0}, "map": {"version":3,"sources":["file:///home/ubuntu/searchBasedRAG/components/clear-history.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const ClearHistory = registerClientReference(\n    function() { throw new Error(\"Attempted to call ClearHistory() from the server but ClearHistory is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/clear-history.tsx <module evaluation>\",\n    \"ClearHistory\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,eAAe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC9C;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,8DACA","debugId":null}},
    {"offset": {"line": 913, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 919, "column": 0}, "map": {"version":3,"sources":["file:///home/ubuntu/searchBasedRAG/components/clear-history.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const ClearHistory = registerClientReference(\n    function() { throw new Error(\"Attempted to call ClearHistory() from the server but ClearHistory is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/clear-history.tsx\",\n    \"ClearHistory\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,eAAe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC9C;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,0CACA","debugId":null}},
    {"offset": {"line": 927, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 933, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 937, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 943, "column": 0}, "map": {"version":3,"sources":["file:///home/ubuntu/searchBasedRAG/components/history-list.tsx"],"sourcesContent":["import React, { cache } from 'react'\nimport HistoryItem from './history-item'\nimport { Chat } from '@/lib/types'\nimport { getChats } from '@/lib/actions/chat'\nimport { ClearHistory } from './clear-history'\n\ntype HistoryListProps = {\n  userId?: string\n}\n\nconst loadChats = cache(async (userId?: string) => {\n  return await getChats(userId)\n})\n\n// Start of Selection\nexport async function HistoryList({ userId }: HistoryListProps) {\n  const chats = await loadChats(userId)\n\n  return (\n    <div className=\"flex flex-col flex-1 space-y-3 h-full\">\n      <div className=\"flex flex-col space-y-0.5 flex-1 overflow-y-auto\">\n        {!chats?.length ? (\n          <div className=\"text-foreground/30 text-sm text-center py-4\">\n            No search history\n          </div>\n        ) : (\n          chats?.map(\n            (chat: Chat) => chat && <HistoryItem key={chat.id} chat={chat} />\n          )\n        )}\n      </div>\n      <div className=\"mt-auto\">\n        <ClearHistory empty={!chats?.length} />\n      </div>\n    </div>\n  )\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;AAEA;AACA;;;;;;AAMA,MAAM,YAAY,CAAA,GAAA,qMAAA,CAAA,QAAK,AAAD,EAAE,OAAO;IAC7B,OAAO,MAAM,CAAA,GAAA,sHAAA,CAAA,WAAQ,AAAD,EAAE;AACxB;AAGO,eAAe,YAAY,EAAE,MAAM,EAAoB;IAC5D,MAAM,QAAQ,MAAM,UAAU;IAE9B,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAI,WAAU;0BACZ,CAAC,OAAO,uBACP,8OAAC;oBAAI,WAAU;8BAA8C;;;;;2BAI7D,OAAO,IACL,CAAC,OAAe,sBAAQ,8OAAC,8HAAA,CAAA,UAAW;wBAAe,MAAM;uBAAf,KAAK,EAAE;;;;;;;;;;0BAIvD,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC,+HAAA,CAAA,eAAY;oBAAC,OAAO,CAAC,OAAO;;;;;;;;;;;;;;;;;AAIrC","debugId":null}},
    {"offset": {"line": 1006, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1012, "column": 0}, "map": {"version":3,"sources":["file:///home/ubuntu/searchBasedRAG/components/history-container.tsx"],"sourcesContent":["import React from 'react'\nimport { History } from './history'\nimport { HistoryList } from './history-list'\n\nconst HistoryContainer: React.FC = async () => {\n  const enableSaveChatHistory = process.env.ENABLE_SAVE_CHAT_HISTORY === 'true'\n  if (!enableSaveChatHistory) {\n    return null\n  }\n\n  return (\n    <div>\n      <History>\n        <HistoryList userId=\"anonymous\" />\n      </History>\n    </div>\n  )\n}\n\nexport default HistoryContainer\n"],"names":[],"mappings":";;;;AACA;AACA;;;;AAEA,MAAM,mBAA6B;IACjC,MAAM,wBAAwB,QAAQ,GAAG,CAAC,wBAAwB,KAAK;IACvE,IAAI,CAAC,uBAAuB;QAC1B,OAAO;IACT;IAEA,qBACE,8OAAC;kBACC,cAAA,8OAAC,sHAAA,CAAA,UAAO;sBACN,cAAA,8OAAC,8HAAA,CAAA,cAAW;gBAAC,QAAO;;;;;;;;;;;;;;;;AAI5B;uCAEe","debugId":null}},
    {"offset": {"line": 1047, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1053, "column": 0}, "map": {"version":3,"sources":["file:///home/ubuntu/searchBasedRAG/components/mode-toggle.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const ModeToggle = registerClientReference(\n    function() { throw new Error(\"Attempted to call ModeToggle() from the server but ModeToggle is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/mode-toggle.tsx <module evaluation>\",\n    \"ModeToggle\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,aAAa,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC5C;IAAa,MAAM,IAAI,MAAM;AAAoO,GACjQ,4DACA","debugId":null}},
    {"offset": {"line": 1061, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1067, "column": 0}, "map": {"version":3,"sources":["file:///home/ubuntu/searchBasedRAG/components/mode-toggle.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const ModeToggle = registerClientReference(\n    function() { throw new Error(\"Attempted to call ModeToggle() from the server but ModeToggle is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/mode-toggle.tsx\",\n    \"ModeToggle\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,aAAa,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC5C;IAAa,MAAM,IAAI,MAAM;AAAoO,GACjQ,wCACA","debugId":null}},
    {"offset": {"line": 1075, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1081, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 1085, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1091, "column": 0}, "map": {"version":3,"sources":["file:///home/ubuntu/searchBasedRAG/components/ui/icons.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const IconLogo = registerClientReference(\n    function() { throw new Error(\"Attempted to call IconLogo() from the server but IconLogo is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/icons.tsx <module evaluation>\",\n    \"IconLogo\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,WAAW,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC1C;IAAa,MAAM,IAAI,MAAM;AAAgO,GAC7P,yDACA","debugId":null}},
    {"offset": {"line": 1099, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1105, "column": 0}, "map": {"version":3,"sources":["file:///home/ubuntu/searchBasedRAG/components/ui/icons.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const IconLogo = registerClientReference(\n    function() { throw new Error(\"Attempted to call IconLogo() from the server but IconLogo is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/icons.tsx\",\n    \"IconLogo\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,WAAW,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC1C;IAAa,MAAM,IAAI,MAAM;AAAgO,GAC7P,qCACA","debugId":null}},
    {"offset": {"line": 1113, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1119, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 1123, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1129, "column": 0}, "map": {"version":3,"sources":["file:///home/ubuntu/searchBasedRAG/components/header.tsx"],"sourcesContent":["import { cn } from '@/lib/utils'\nimport React from 'react'\nimport HistoryContainer from './history-container'\nimport { ModeToggle } from './mode-toggle'\nimport { IconLogo } from './ui/icons'\n\nexport const Header: React.FC = async () => {\n  return (\n    <header className=\"fixed w-full p-2 flex justify-between items-center z-10 backdrop-blur lg:backdrop-blur-none bg-background/80 lg:bg-transparent\">\n      <div>\n        <a href=\"/\">\n          <IconLogo className={cn('w-5 h-5')} />\n          <span className=\"sr-only\">Morphic</span>\n        </a>\n      </div>\n      <div className=\"flex gap-0.5\">\n        <ModeToggle />\n        <HistoryContainer />\n      </div>\n    </header>\n  )\n}\n\nexport default Header\n"],"names":[],"mappings":";;;;;AAAA;AAEA;AACA;AACA;;;;;;AAEO,MAAM,SAAmB;IAC9B,qBACE,8OAAC;QAAO,WAAU;;0BAChB,8OAAC;0BACC,cAAA,8OAAC;oBAAE,MAAK;;sCACN,8OAAC,0HAAA,CAAA,WAAQ;4BAAC,WAAW,CAAA,GAAA,qHAAA,CAAA,KAAE,AAAD,EAAE;;;;;;sCACxB,8OAAC;4BAAK,WAAU;sCAAU;;;;;;;;;;;;;;;;;0BAG9B,8OAAC;gBAAI,WAAU;;kCACb,8OAAC,6HAAA,CAAA,aAAU;;;;;kCACX,8OAAC,mIAAA,CAAA,UAAgB;;;;;;;;;;;;;;;;;AAIzB;uCAEe","debugId":null}},
    {"offset": {"line": 1204, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1210, "column": 0}, "map": {"version":3,"sources":["file:///home/ubuntu/searchBasedRAG/components/theme-provider.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const ThemeProvider = registerClientReference(\n    function() { throw new Error(\"Attempted to call ThemeProvider() from the server but ThemeProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/theme-provider.tsx <module evaluation>\",\n    \"ThemeProvider\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,gBAAgB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC/C;IAAa,MAAM,IAAI,MAAM;AAA0O,GACvQ,+DACA","debugId":null}},
    {"offset": {"line": 1218, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1224, "column": 0}, "map": {"version":3,"sources":["file:///home/ubuntu/searchBasedRAG/components/theme-provider.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const ThemeProvider = registerClientReference(\n    function() { throw new Error(\"Attempted to call ThemeProvider() from the server but ThemeProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/theme-provider.tsx\",\n    \"ThemeProvider\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,gBAAgB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC/C;IAAa,MAAM,IAAI,MAAM;AAA0O,GACvQ,2CACA","debugId":null}},
    {"offset": {"line": 1232, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1238, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 1242, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1248, "column": 0}, "map": {"version":3,"sources":["file:///home/ubuntu/searchBasedRAG/components/ui/sonner.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Toaster = registerClientReference(\n    function() { throw new Error(\"Attempted to call Toaster() from the server but Toaster is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/sonner.tsx <module evaluation>\",\n    \"Toaster\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,UAAU,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACzC;IAAa,MAAM,IAAI,MAAM;AAA8N,GAC3P,0DACA","debugId":null}},
    {"offset": {"line": 1256, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1262, "column": 0}, "map": {"version":3,"sources":["file:///home/ubuntu/searchBasedRAG/components/ui/sonner.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Toaster = registerClientReference(\n    function() { throw new Error(\"Attempted to call Toaster() from the server but Toaster is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/sonner.tsx\",\n    \"Toaster\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,UAAU,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACzC;IAAa,MAAM,IAAI,MAAM;AAA8N,GAC3P,sCACA","debugId":null}},
    {"offset": {"line": 1270, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1276, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 1280, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1285, "column": 0}, "map": {"version":3,"sources":["turbopack:///[next]/internal/font/google/inter_95e1d3b3.module.css [app-rsc] (css module)"],"sourcesContent":["__turbopack_context__.v({\n  \"className\": \"inter_95e1d3b3-module__jTJ6xG__className\",\n  \"variable\": \"inter_95e1d3b3-module__jTJ6xG__variable\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA","ignoreList":[0]}},
    {"offset": {"line": 1289, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1295, "column": 0}, "map": {"version":3,"sources":["turbopack:///[next]/internal/font/google/inter_95e1d3b3.js"],"sourcesContent":["import cssModule from \"@vercel/turbopack-next/internal/font/google/cssmodule.module.css?{%22path%22:%22layout.tsx%22,%22import%22:%22Inter%22,%22arguments%22:[{%22subsets%22:[%22latin%22],%22variable%22:%22--font-sans%22}],%22variableName%22:%22fontSans%22}\";\nconst fontData = {\n    className: cssModule.className,\n    style: {\n        fontFamily: \"'Inter', 'Inter Fallback'\",\n        fontStyle: \"normal\",\n\n    },\n};\n\nif (cssModule.variable != null) {\n    fontData.variable = cssModule.variable;\n}\n\nexport default fontData;\n"],"names":[],"mappings":";;;AAAA;;AACA,MAAM,WAAW;IACb,WAAW,qJAAA,CAAA,UAAS,CAAC,SAAS;IAC9B,OAAO;QACH,YAAY;QACZ,WAAW;IAEf;AACJ;AAEA,IAAI,qJAAA,CAAA,UAAS,CAAC,QAAQ,IAAI,MAAM;IAC5B,SAAS,QAAQ,GAAG,qJAAA,CAAA,UAAS,CAAC,QAAQ;AAC1C;uCAEe","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1311, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1317, "column": 0}, "map": {"version":3,"sources":["file:///home/ubuntu/searchBasedRAG/app/layout.tsx"],"sourcesContent":["import Footer from '@/components/footer'\nimport Header from '@/components/header'\nimport { ThemeProvider } from '@/components/theme-provider'\nimport { Toaster } from '@/components/ui/sonner'\nimport { cn } from '@/lib/utils'\nimport type { Metadata, Viewport } from 'next'\nimport { Inter as FontSans } from 'next/font/google'\nimport './globals.css'\n\nconst fontSans = FontSans({\n  subsets: ['latin'],\n  variable: '--font-sans'\n})\n\nconst title = 'Morphic'\nconst description =\n  'A fully open-source AI-powered answer engine with a generative UI.'\n\nexport const metadata: Metadata = {\n  metadataBase: new URL('https://morphic.sh'),\n  title,\n  description,\n  openGraph: {\n    title,\n    description\n  },\n  twitter: {\n    title,\n    description,\n    card: 'summary_large_image',\n    creator: '@miiura'\n  }\n}\n\nexport const viewport: Viewport = {\n  width: 'device-width',\n  initialScale: 1,\n  minimumScale: 1,\n  maximumScale: 1\n}\n\nexport default function RootLayout({\n  children\n}: Readonly<{\n  children: React.ReactNode\n}>) {\n  return (\n    <html lang=\"en\" suppressHydrationWarning>\n      <body className={cn('font-sans antialiased', fontSans.variable)}>\n        <ThemeProvider\n          attribute=\"class\"\n          defaultTheme=\"system\"\n          enableSystem\n          disableTransitionOnChange\n        >\n          <Header />\n          {children}\n          <Footer />\n          <Toaster />\n        </ThemeProvider>\n      </body>\n    </html>\n  )\n}\n"],"names":[],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;;;;;;;;;;AAUA,MAAM,QAAQ;AACd,MAAM,cACJ;AAEK,MAAM,WAAqB;IAChC,cAAc,IAAI,IAAI;IACtB;IACA;IACA,WAAW;QACT;QACA;IACF;IACA,SAAS;QACP;QACA;QACA,MAAM;QACN,SAAS;IACX;AACF;AAEO,MAAM,WAAqB;IAChC,OAAO;IACP,cAAc;IACd,cAAc;IACd,cAAc;AAChB;AAEe,SAAS,WAAW,EACjC,QAAQ,EAGR;IACA,qBACE,8OAAC;QAAK,MAAK;QAAK,wBAAwB;kBACtC,cAAA,8OAAC;YAAK,WAAW,CAAA,GAAA,qHAAA,CAAA,KAAE,AAAD,EAAE,yBAAyB,yIAAA,CAAA,UAAQ,CAAC,QAAQ;sBAC5D,cAAA,8OAAC,gIAAA,CAAA,gBAAa;gBACZ,WAAU;gBACV,cAAa;gBACb,YAAY;gBACZ,yBAAyB;;kCAEzB,8OAAC,qHAAA,CAAA,UAAM;;;;;oBACN;kCACD,8OAAC,qHAAA,CAAA,UAAM;;;;;kCACP,8OAAC,2HAAA,CAAA,UAAO;;;;;;;;;;;;;;;;;;;;;AAKlB","debugId":null}},
    {"offset": {"line": 1405, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}